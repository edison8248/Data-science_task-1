import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression


df = pd.read_csv('weather.csv')  # Replace with your CSV path
df['Date'] = pd.to_datetime(df['Date'], format='%d %B %Y')
df['Year'] = df['Date'].dt.year


df = df[(df['Year'] >= 2010) & (df['Year'] <= 2025)]


numeric_cols = ['Temperature', 'Humidity', 'Rainfall']
df[numeric_cols] = df[numeric_cols].fillna(df[numeric_cols].mean())


df_yearly = df.groupby('Year').mean(numeric_only=True)

 1) Temperature Trends Over Years

plt.figure(figsize=(8,4))
plt.plot(df_yearly.index, df_yearly['Temperature'], marker='o', color='red', label='Temperature (°C)')
plt.title('Temperature Trends Over Years')
plt.xlabel('Year')
plt.ylabel('Temperature (°C)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()


2) Yearly Rainfall Distribution

plt.figure(figsize=(8,4))
plt.bar(df_yearly.index, df_yearly['Rainfall'], color='blue')
plt.title('Yearly Rainfall Distribution')
plt.xlabel('Year')
plt.ylabel('Rainfall (mm)')
plt.tight_layout()
plt.show()


3) Humidity vs Temperature Correlation

plt.figure(figsize=(6,4))
plt.scatter(df['Temperature'], df['Humidity'], color='green', alpha=0.6)
plt.title('Humidity vs Temperature Correlation')
plt.xlabel('Temperature (°C)')
plt.ylabel('Humidity (%)')
plt.grid(True)
plt.tight_layout()
plt.show()


 4) Temperature Prediction for Next Years

X = df_yearly.index.values.reshape(-1, 1)
y = df_yearly['Temperature'].values

model = LinearRegression()
model.fit(X, y)

future_years = np.arange(2026, 2031).reshape(-1,1)  # Forecast for 2026–2030
future_preds = model.predict(future_years)

plt.figure(figsize=(8,4))
plt.scatter(X, y, color='purple', label='Actual Temperature')
plt.plot(X, model.predict(X), color='orange', label='Trend Line')
plt.scatter(future_years, future_preds, color='red', marker='x', label='Forecasted Temps')
plt.title('Temperature Prediction for Next Years')
plt.xlabel('Year')
plt.ylabel('Temperature (°C)')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
